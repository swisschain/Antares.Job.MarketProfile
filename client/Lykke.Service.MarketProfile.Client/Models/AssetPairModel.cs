// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

using Microsoft.Rest;
using Newtonsoft.Json;

namespace Antares.Service.MarketProfile.LykkeClient.Models
{
    public partial class AssetPairModel
    {
        /// <summary>
        /// Initializes a new instance of the AssetPairModel class.
        /// </summary>
        public AssetPairModel()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssetPairModel class.
        /// </summary>
        public AssetPairModel(string assetPair, double bidPrice, double askPrice, System.DateTime bidPriceTimestamp, System.DateTime askPriceTimestamp)
        {
            AssetPair = assetPair;
            BidPrice = bidPrice;
            AskPrice = askPrice;
            BidPriceTimestamp = bidPriceTimestamp;
            AskPriceTimestamp = askPriceTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetPair")]
        public string AssetPair { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BidPrice")]
        public double BidPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AskPrice")]
        public double AskPrice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BidPriceTimestamp")]
        public System.DateTime BidPriceTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AskPriceTimestamp")]
        public System.DateTime AskPriceTimestamp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AssetPair == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetPair");
            }
        }
    }
}
